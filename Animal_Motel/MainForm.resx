<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pcImage.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhmAFpAfcAAAAAAAAAMwAAZgAAmQAAzAAA/wArAAArMwArZgArmQArzAAr/wBVAABVMwBVZgBV
        mQBVzABV/wCAAACAMwCAZgCAmQCAzACA/wCqAACqMwCqZgCqmQCqzACq/wDVAADVMwDVZgDVmQDVzADV
        /wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMrADMrMzMrZjMrmTMrzDMr/zNVADNV
        MzNVZjNVmTNVzDNV/zOAADOAMzOAZjOAmTOAzDOA/zOqADOqMzOqZjOqmTOqzDOq/zPVADPVMzPVZjPV
        mTPVzDPV/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YrAGYrM2YrZmYrmWYrzGYr
        /2ZVAGZVM2ZVZmZVmWZVzGZV/2aAAGaAM2aAZmaAmWaAzGaA/2aqAGaqM2aqZmaqmWaqzGaq/2bVAGbV
        M2bVZmbVmWbVzGbV/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5krAJkrM5krZpkr
        mZkrzJkr/5lVAJlVM5lVZplVmZlVzJlV/5mAAJmAM5mAZpmAmZmAzJmA/5mqAJmqM5mqZpmqmZmqzJmq
        /5nVAJnVM5nVZpnVmZnVzJnV/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wrAMwr
        M8wrZswrmcwrzMwr/8xVAMxVM8xVZsxVmcxVzMxV/8yAAMyAM8yAZsyAmcyAzMyA/8yqAMyqM8yqZsyq
        mcyqzMyq/8zVAMzVM8zVZszVmczVzMzV/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A
        //8rAP8rM/8rZv8rmf8rzP8r//9VAP9VM/9VZv9Vmf9VzP9V//+AAP+AM/+AZv+Amf+AzP+A//+qAP+q
        M/+qZv+qmf+qzP+q///VAP/VM//VZv/Vmf/VzP/V////AP//M///Zv//mf//zP///wAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAQACwAAAAAmAFpAQAItAD3CRxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bNmzhz6tzJs6fPn0CDCh1KtKjR
        o0iTKl3KtKnTp1CjSp1KtarVq1izat3KtavXr2DDih1LtqzZs2jTql3Ltq3bt3Djyp1Lt67du3jz6t3L
        t6/fv4ADCx5MuLDhw4gTK17MuLHjx5AjS55MubLly4gBaN7MuTMAzLmgo3oeTXp06NNDS6tebRq165qs
        Y8vu/Lo2y9m4c2u2zVuk7t0Pf3/uTRwjbo65iysPLpvk7OXQD8a+zTq69eovp1snvtpm9+21VfMUDz70
        957ky1dO/5O9+sfug8Z/n7i0Uvv0FeNnuj8/4f5NkebfYAA+VeCAeR1ooIAI7sUgVg82aFeEELYmIV0W
        dpXhhW9tqKFnHMLloVcUhmhWiWChaGJYKqY44ookvihWizBmReNYMtZ4FYgd8rKo41Y+9kjbjzYOKVeQ
        RFKV41pIJgnVkkw26SR/UsYF5ZSpVXmkllhmaWSCXHYJVJhzXSmmTmRi+OWZ8q3ZV5pswgZnXXPGGVOd
        arpp50140qnnnjT1OeGfgMIk6F2HFuoboYGZqWhJiSLK6KMnRYqXpZQaN+l/nGXaEqaXbuqpR6CC2emo
        lYpaWKmoMsSqqZu16typlL0qa0G2wgrcrR3lqpevsgKrK6/IqcqYsJ4a25iylsQmhOyvzDZrULTH0iqt
        RM86SO2121Yb67URZcuXuGx2u6y5rZI7Lrqosuvtt+AqpO6b7lJa77vDxYvQvH7xq+O958KrL0H+9gtw
        nAcHvOvAAiWMb74DO6wwxPpKjC/D+xTcqMVEcnxxxR4vpvGAIX8MbskiW9vsyJwKTCzKJq+ssnowN1hz
        zLfenLLLwc78ns70Ab3zwofp+hy00ZkKrR/Sjyo9NMXJMv2z1IA6vTTP9lI9NdaKWv100VyTrPWZLD88
        qtc4dz321kSrHTaCaNtW9sRQ7xl32navffTbZOvNdt0I3/004H3zLaHg5vm9d9uBG26z4jUi/nWhkuMt
        ZuWT5+344ZCbiPnVjF/e+d9Vf16f6ZChfvrmkY++OOH/TqqemeuPs8657SvKfpjumWPJ++qh//j77Ljf
        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
</value>
  </data>
</root>